/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_BADGELINK_BADGELINK_PB_H_INCLUDED
#define PB_BADGELINK_BADGELINK_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _badgelink_StatusCode {
    /* Everything's OK. */
    badgelink_StatusCode_StatusOk = 0,
    /* Operation not supported. */
    badgelink_StatusCode_StatusNotSupported = 1,
    /* Resource not found. */
    badgelink_StatusCode_StatusNotFound = 2,
    /* Malformed request (e.g. missing params). */
    badgelink_StatusCode_StatusMalformed = 3,
    /* Internal error. */
    badgelink_StatusCode_StatusInternalError = 4,
    /* Operation is illegal in current state (e.g. file transfer already started). */
    badgelink_StatusCode_StatusIllegalState = 5,
    /* Not enough space available. */
    badgelink_StatusCode_StatusNoSpace = 6,
    /* Directory not empty. */
    badgelink_StatusCode_StatusNotEmpty = 7,
    /* Is a file. */
    badgelink_StatusCode_StatusIsFile = 8,
    /* Is a directory. */
    badgelink_StatusCode_StatusIsDir = 9,
    /* File exists. */
    badgelink_StatusCode_StatusExists = 10
} badgelink_StatusCode;

typedef enum _badgelink_XferReq {
    /* Continue the download. */
    badgelink_XferReq_XferContinue = 0,
    /* Abort the transfer. */
    badgelink_XferReq_XferAbort = 1,
    /* Complete the transfer normally. */
    badgelink_XferReq_XferFinish = 2
} badgelink_XferReq;

typedef enum _badgelink_FsActionType {
    /* List directory / whole AppFS. */
    badgelink_FsActionType_FsActionList = 0,
    /* Delete file. */
    badgelink_FsActionType_FsActionDelete = 1,
    /* Create dirs. */
    badgelink_FsActionType_FsActionMkdir = 2,
    /* Upload file. */
    badgelink_FsActionType_FsActionUpload = 3,
    /* Download file. */
    badgelink_FsActionType_FsActionDownload = 4,
    /* Stat file / get metadata. */
    badgelink_FsActionType_FsActionStat = 5,
    /* Calculate and retrieve CRC32. */
    badgelink_FsActionType_FsActionCrc23 = 6,
    /* Get space usage of filesystem. */
    badgelink_FsActionType_FsActionGetUsage = 7,
    /* Remove directory. */
    badgelink_FsActionType_FsActionRmdir = 8
} badgelink_FsActionType;

typedef enum _badgelink_NvsActionType {
    /* List keys in namespace. */
    badgelink_NvsActionType_NvsActionList = 0,
    /* Read an NVS entry. */
    badgelink_NvsActionType_NvsActionRead = 1,
    /* Write an NVS entry. */
    badgelink_NvsActionType_NvsActionWrite = 2,
    /* Delete an NVS entry. */
    badgelink_NvsActionType_NvsActionDelete = 3
} badgelink_NvsActionType;

typedef enum _badgelink_NvsValueType {
    /* Unsigned 8-bit integer. */
    badgelink_NvsValueType_NvsValueUint8 = 0,
    /* Signed 8-bit integer. */
    badgelink_NvsValueType_NvsValueInt8 = 1,
    /* Unsigned 16-bit integer. */
    badgelink_NvsValueType_NvsValueUint16 = 2,
    /* Signed 16-bit integer. */
    badgelink_NvsValueType_NvsValueInt16 = 3,
    /* Unsigned 32-bit integer. */
    badgelink_NvsValueType_NvsValueUint32 = 4,
    /* Signed 32-bit integer. */
    badgelink_NvsValueType_NvsValueInt32 = 5,
    /* Unsigned 64-bit integer. */
    badgelink_NvsValueType_NvsValueUint64 = 6,
    /* Signed 64-bit integer. */
    badgelink_NvsValueType_NvsValueInt64 = 7,
    /* String value. */
    badgelink_NvsValueType_NvsValueString = 8,
    /* Binary blob value. */
    badgelink_NvsValueType_NvsValueBlob = 9
} badgelink_NvsValueType;

/* Struct definitions */
typedef struct _badgelink_StartAppReq {
    /* App slug. */
    char slug[48];
    /* App argument (optional). */
    char arg[128];
} badgelink_StartAppReq;

typedef PB_BYTES_ARRAY_T(4096) badgelink_Chunk_data_t;
/* Upload / download chunk; */
typedef struct _badgelink_Chunk {
    /* File position. */
    uint32_t position;
    /* File data. */
    badgelink_Chunk_data_t data;
} badgelink_Chunk;

/* Filesystem usage statistics. */
typedef struct _badgelink_FsUsage {
    /* Total size. */
    uint32_t size;
    /* Used amount. */
    uint32_t used;
} badgelink_FsUsage;

typedef struct _badgelink_AppfsMetadata {
    /* Application slug / filename. */
    char slug[48];
    /* Application title. */
    char title[64];
    /* Application version */
    uint32_t version;
    /* Application size. */
    uint32_t size;
} badgelink_AppfsMetadata;

typedef struct _badgelink_AppfsActionReq {
    /* Action to perform. */
    badgelink_FsActionType type;
    pb_size_t which_id;
    union _badgelink_AppfsActionReq_id {
        /* App metadata (for upload). */
        badgelink_AppfsMetadata metadata;
        /* Application slug / filename (for download, crc32 and delete). */
        char slug[48];
    } id;
    /* CRC32 checksum (for upload). */
    uint32_t crc32;
    /* AppFS list offset. */
    uint32_t list_offset;
} badgelink_AppfsActionReq;

typedef struct _badgelink_AppfsList {
    /* List of metadata. */
    pb_size_t list_count;
    badgelink_AppfsMetadata list[8];
    /* Total size of the list. */
    uint32_t total_size;
} badgelink_AppfsList;

typedef struct _badgelink_AppfsActionResp {
    pb_size_t which_val;
    union _badgelink_AppfsActionResp_val {
        /* App metadata (for stat). */
        badgelink_AppfsMetadata metadata;
        /* CRC32 checksum (for download and crc32). */
        uint32_t crc32;
        /* List of metadata (for list). */
        badgelink_AppfsList list;
        /* Usage statistics. */
        badgelink_FsUsage usage;
    } val;
    /* App size (for download). */
    uint32_t size;
} badgelink_AppfsActionResp;

typedef struct _badgelink_FsStat {
    /* File size in bytes. */
    uint32_t size;
    /* Last modified date in unix millis. */
    uint64_t mtime;
    /* Creation date in unix millis. */
    uint64_t ctime;
    /* Accessed date in unix millis. */
    uint64_t atime;
    /* Is a directory? */
    bool is_dir;
} badgelink_FsStat;

typedef struct _badgelink_FsActionReq {
    /* Action to perform. */
    badgelink_FsActionType type;
    /* Path to act on. */
    char path[1024];
    /* CRC32 checksum (for upload). */
    uint32_t crc32;
    /* Directory listing offset. */
    uint32_t list_offset;
    /* File size (for upload). */
    uint32_t size;
} badgelink_FsActionReq;

typedef struct _badgelink_FsDirent {
    /* File name. */
    char name[256];
    /* Is a directory. */
    bool is_dir;
} badgelink_FsDirent;

typedef struct _badgelink_FsDirentList {
    /* List of dirents. */
    pb_size_t list_count;
    badgelink_FsDirent list[16];
    /* Total number of dirents. */
    uint32_t total_size;
} badgelink_FsDirentList;

typedef struct _badgelink_FsActionResp {
    pb_size_t which_val;
    union _badgelink_FsActionResp_val {
        /* File stat info. */
        badgelink_FsStat stat;
        /* CRC32 checksum. */
        uint32_t crc32;
        /* Directory listing. */
        badgelink_FsDirentList list;
        /* Filesystem usage statistics. */
        badgelink_FsUsage usage;
    } val;
    /* File size (for download). */
    uint32_t size;
} badgelink_FsActionResp;

typedef PB_BYTES_ARRAY_T(4096) badgelink_NvsValue_blobval_t;
typedef struct _badgelink_NvsValue {
    /* Value type. */
    badgelink_NvsValueType type;
    pb_size_t which_val;
    union _badgelink_NvsValue_val {
        /* Numeric value. */
        uint64_t numericval;
        /* String value. */
        char stringval[4096];
        /* Blob value. */
        badgelink_NvsValue_blobval_t blobval;
    } val;
} badgelink_NvsValue;

typedef struct _badgelink_NvsEntry {
    /* Value type. */
    badgelink_NvsValueType type;
    /* Entry namespace. */
    char namespc[17];
    /* Entry key. */
    char key[17];
} badgelink_NvsEntry;

typedef struct _badgelink_NvsActionReq {
    /* Action to perform. */
    badgelink_NvsActionType type;
    /* NVS namespace. */
    char namespc[17];
    /* NVS key. */
    char key[17];
    /* NVS value for writes. */
    bool has_wdata;
    badgelink_NvsValue wdata;
    /* Entry offset for list. */
    uint32_t list_offset;
    /* NVS read type (because one ns/key pair can have a value per type). */
    badgelink_NvsValueType read_type;
} badgelink_NvsActionReq;

typedef struct _badgelink_Request {
    pb_size_t which_req;
    union _badgelink_Request_req {
        /* File data transferred host -> badge. */
        badgelink_Chunk upload_chunk;
        /* AppFS action request. */
        badgelink_AppfsActionReq appfs_action;
        /* FS action request. */
        badgelink_FsActionReq fs_action;
        /* NVS action request. */
        badgelink_NvsActionReq nvs_action;
        /* Start app request. */
        badgelink_StartAppReq start_app;
        /* Transfer control request. */
        badgelink_XferReq xfer_ctrl;
    } req;
} badgelink_Request;

typedef struct _badgelink_NvsEntriesList {
    /* List of NVS entries. */
    pb_size_t entries_count;
    badgelink_NvsEntry entries[128];
    /* Total number of entries (before and/or after). */
    uint32_t total_entries;
} badgelink_NvsEntriesList;

typedef struct _badgelink_NvsActionResp {
    pb_size_t which_val;
    union _badgelink_NvsActionResp_val {
        /* NVS value (for reads). */
        badgelink_NvsValue rdata;
        /* List of NVS entries. */
        badgelink_NvsEntriesList entries;
    } val;
} badgelink_NvsActionResp;

typedef struct _badgelink_Response {
    /* Status code for last request. */
    badgelink_StatusCode status_code;
    pb_size_t which_resp;
    union _badgelink_Response_resp {
        /* File data transferred badge -> host. */
        badgelink_Chunk download_chunk;
        /* AppFS action response. */
        badgelink_AppfsActionResp appfs_resp;
        /* FS action response. */
        badgelink_FsActionResp fs_resp;
        /* NVS action response. */
        badgelink_NvsActionResp nvs_resp;
    } resp;
} badgelink_Response;

typedef struct _badgelink_Packet {
    /* Request / response serial no. */
    uint64_t serial;
    pb_size_t which_packet;
    union _badgelink_Packet_packet {
        /* Request data host -> badge. */
        badgelink_Request request;
        /* Response data badge -> host. */
        badgelink_Response response;
        /* Sync packet; set initial serial no. if true. */
        bool sync;
    } packet;
} badgelink_Packet;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _badgelink_StatusCode_MIN badgelink_StatusCode_StatusOk
#define _badgelink_StatusCode_MAX badgelink_StatusCode_StatusExists
#define _badgelink_StatusCode_ARRAYSIZE ((badgelink_StatusCode)(badgelink_StatusCode_StatusExists+1))

#define _badgelink_XferReq_MIN badgelink_XferReq_XferContinue
#define _badgelink_XferReq_MAX badgelink_XferReq_XferFinish
#define _badgelink_XferReq_ARRAYSIZE ((badgelink_XferReq)(badgelink_XferReq_XferFinish+1))

#define _badgelink_FsActionType_MIN badgelink_FsActionType_FsActionList
#define _badgelink_FsActionType_MAX badgelink_FsActionType_FsActionRmdir
#define _badgelink_FsActionType_ARRAYSIZE ((badgelink_FsActionType)(badgelink_FsActionType_FsActionRmdir+1))

#define _badgelink_NvsActionType_MIN badgelink_NvsActionType_NvsActionList
#define _badgelink_NvsActionType_MAX badgelink_NvsActionType_NvsActionDelete
#define _badgelink_NvsActionType_ARRAYSIZE ((badgelink_NvsActionType)(badgelink_NvsActionType_NvsActionDelete+1))

#define _badgelink_NvsValueType_MIN badgelink_NvsValueType_NvsValueUint8
#define _badgelink_NvsValueType_MAX badgelink_NvsValueType_NvsValueBlob
#define _badgelink_NvsValueType_ARRAYSIZE ((badgelink_NvsValueType)(badgelink_NvsValueType_NvsValueBlob+1))


#define badgelink_Request_req_xfer_ctrl_ENUMTYPE badgelink_XferReq

#define badgelink_Response_status_code_ENUMTYPE badgelink_StatusCode





#define badgelink_AppfsActionReq_type_ENUMTYPE badgelink_FsActionType




#define badgelink_FsActionReq_type_ENUMTYPE badgelink_FsActionType




#define badgelink_NvsValue_type_ENUMTYPE badgelink_NvsValueType

#define badgelink_NvsEntry_type_ENUMTYPE badgelink_NvsValueType

#define badgelink_NvsActionReq_type_ENUMTYPE badgelink_NvsActionType
#define badgelink_NvsActionReq_read_type_ENUMTYPE badgelink_NvsValueType




/* Initializer values for message structs */
#define badgelink_Packet_init_default            {0, 0, {badgelink_Request_init_default}}
#define badgelink_Request_init_default           {0, {badgelink_Chunk_init_default}}
#define badgelink_Response_init_default          {_badgelink_StatusCode_MIN, 0, {badgelink_Chunk_init_default}}
#define badgelink_StartAppReq_init_default       {"", ""}
#define badgelink_Chunk_init_default             {0, {0, {0}}}
#define badgelink_FsUsage_init_default           {0, 0}
#define badgelink_AppfsMetadata_init_default     {"", "", 0, 0}
#define badgelink_AppfsActionReq_init_default    {_badgelink_FsActionType_MIN, 0, {badgelink_AppfsMetadata_init_default}, 0, 0}
#define badgelink_AppfsList_init_default         {0, {badgelink_AppfsMetadata_init_default, badgelink_AppfsMetadata_init_default, badgelink_AppfsMetadata_init_default, badgelink_AppfsMetadata_init_default, badgelink_AppfsMetadata_init_default, badgelink_AppfsMetadata_init_default, badgelink_AppfsMetadata_init_default, badgelink_AppfsMetadata_init_default}, 0}
#define badgelink_AppfsActionResp_init_default   {0, {badgelink_AppfsMetadata_init_default}, 0}
#define badgelink_FsStat_init_default            {0, 0, 0, 0, 0}
#define badgelink_FsActionReq_init_default       {_badgelink_FsActionType_MIN, "", 0, 0, 0}
#define badgelink_FsDirent_init_default          {"", 0}
#define badgelink_FsDirentList_init_default      {0, {badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default, badgelink_FsDirent_init_default}, 0}
#define badgelink_FsActionResp_init_default      {0, {badgelink_FsStat_init_default}, 0}
#define badgelink_NvsValue_init_default          {_badgelink_NvsValueType_MIN, 0, {0}}
#define badgelink_NvsEntry_init_default          {_badgelink_NvsValueType_MIN, "", ""}
#define badgelink_NvsActionReq_init_default      {_badgelink_NvsActionType_MIN, "", "", false, badgelink_NvsValue_init_default, 0, _badgelink_NvsValueType_MIN}
#define badgelink_NvsEntriesList_init_default    {0, {badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default, badgelink_NvsEntry_init_default}, 0}
#define badgelink_NvsActionResp_init_default     {0, {badgelink_NvsValue_init_default}}
#define badgelink_Packet_init_zero               {0, 0, {badgelink_Request_init_zero}}
#define badgelink_Request_init_zero              {0, {badgelink_Chunk_init_zero}}
#define badgelink_Response_init_zero             {_badgelink_StatusCode_MIN, 0, {badgelink_Chunk_init_zero}}
#define badgelink_StartAppReq_init_zero          {"", ""}
#define badgelink_Chunk_init_zero                {0, {0, {0}}}
#define badgelink_FsUsage_init_zero              {0, 0}
#define badgelink_AppfsMetadata_init_zero        {"", "", 0, 0}
#define badgelink_AppfsActionReq_init_zero       {_badgelink_FsActionType_MIN, 0, {badgelink_AppfsMetadata_init_zero}, 0, 0}
#define badgelink_AppfsList_init_zero            {0, {badgelink_AppfsMetadata_init_zero, badgelink_AppfsMetadata_init_zero, badgelink_AppfsMetadata_init_zero, badgelink_AppfsMetadata_init_zero, badgelink_AppfsMetadata_init_zero, badgelink_AppfsMetadata_init_zero, badgelink_AppfsMetadata_init_zero, badgelink_AppfsMetadata_init_zero}, 0}
#define badgelink_AppfsActionResp_init_zero      {0, {badgelink_AppfsMetadata_init_zero}, 0}
#define badgelink_FsStat_init_zero               {0, 0, 0, 0, 0}
#define badgelink_FsActionReq_init_zero          {_badgelink_FsActionType_MIN, "", 0, 0, 0}
#define badgelink_FsDirent_init_zero             {"", 0}
#define badgelink_FsDirentList_init_zero         {0, {badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero, badgelink_FsDirent_init_zero}, 0}
#define badgelink_FsActionResp_init_zero         {0, {badgelink_FsStat_init_zero}, 0}
#define badgelink_NvsValue_init_zero             {_badgelink_NvsValueType_MIN, 0, {0}}
#define badgelink_NvsEntry_init_zero             {_badgelink_NvsValueType_MIN, "", ""}
#define badgelink_NvsActionReq_init_zero         {_badgelink_NvsActionType_MIN, "", "", false, badgelink_NvsValue_init_zero, 0, _badgelink_NvsValueType_MIN}
#define badgelink_NvsEntriesList_init_zero       {0, {badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero, badgelink_NvsEntry_init_zero}, 0}
#define badgelink_NvsActionResp_init_zero        {0, {badgelink_NvsValue_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define badgelink_StartAppReq_slug_tag           1
#define badgelink_StartAppReq_arg_tag            2
#define badgelink_Chunk_position_tag             2
#define badgelink_Chunk_data_tag                 3
#define badgelink_FsUsage_size_tag               1
#define badgelink_FsUsage_used_tag               2
#define badgelink_AppfsMetadata_slug_tag         1
#define badgelink_AppfsMetadata_title_tag        2
#define badgelink_AppfsMetadata_version_tag      3
#define badgelink_AppfsMetadata_size_tag         4
#define badgelink_AppfsActionReq_type_tag        1
#define badgelink_AppfsActionReq_metadata_tag    2
#define badgelink_AppfsActionReq_slug_tag        3
#define badgelink_AppfsActionReq_crc32_tag       4
#define badgelink_AppfsActionReq_list_offset_tag 5
#define badgelink_AppfsList_list_tag             1
#define badgelink_AppfsList_total_size_tag       2
#define badgelink_AppfsActionResp_metadata_tag   1
#define badgelink_AppfsActionResp_crc32_tag      2
#define badgelink_AppfsActionResp_list_tag       3
#define badgelink_AppfsActionResp_usage_tag      4
#define badgelink_AppfsActionResp_size_tag       5
#define badgelink_FsStat_size_tag                1
#define badgelink_FsStat_mtime_tag               2
#define badgelink_FsStat_ctime_tag               3
#define badgelink_FsStat_atime_tag               4
#define badgelink_FsStat_is_dir_tag              5
#define badgelink_FsActionReq_type_tag           1
#define badgelink_FsActionReq_path_tag           2
#define badgelink_FsActionReq_crc32_tag          3
#define badgelink_FsActionReq_list_offset_tag    4
#define badgelink_FsActionReq_size_tag           5
#define badgelink_FsDirent_name_tag              1
#define badgelink_FsDirent_is_dir_tag            2
#define badgelink_FsDirentList_list_tag          1
#define badgelink_FsDirentList_total_size_tag    2
#define badgelink_FsActionResp_stat_tag          1
#define badgelink_FsActionResp_crc32_tag         2
#define badgelink_FsActionResp_list_tag          3
#define badgelink_FsActionResp_usage_tag         4
#define badgelink_FsActionResp_size_tag          5
#define badgelink_NvsValue_type_tag              1
#define badgelink_NvsValue_numericval_tag        2
#define badgelink_NvsValue_stringval_tag         3
#define badgelink_NvsValue_blobval_tag           4
#define badgelink_NvsEntry_type_tag              1
#define badgelink_NvsEntry_namespc_tag           2
#define badgelink_NvsEntry_key_tag               3
#define badgelink_NvsActionReq_type_tag          1
#define badgelink_NvsActionReq_namespc_tag       2
#define badgelink_NvsActionReq_key_tag           3
#define badgelink_NvsActionReq_wdata_tag         4
#define badgelink_NvsActionReq_list_offset_tag   5
#define badgelink_NvsActionReq_read_type_tag     6
#define badgelink_Request_upload_chunk_tag       1
#define badgelink_Request_appfs_action_tag       2
#define badgelink_Request_fs_action_tag          3
#define badgelink_Request_nvs_action_tag         4
#define badgelink_Request_start_app_tag          5
#define badgelink_Request_xfer_ctrl_tag          6
#define badgelink_NvsEntriesList_entries_tag     1
#define badgelink_NvsEntriesList_total_entries_tag 2
#define badgelink_NvsActionResp_rdata_tag        1
#define badgelink_NvsActionResp_entries_tag      2
#define badgelink_Response_status_code_tag       1
#define badgelink_Response_download_chunk_tag    2
#define badgelink_Response_appfs_resp_tag        3
#define badgelink_Response_fs_resp_tag           4
#define badgelink_Response_nvs_resp_tag          5
#define badgelink_Packet_serial_tag              1
#define badgelink_Packet_request_tag             2
#define badgelink_Packet_response_tag            3
#define badgelink_Packet_sync_tag                4

/* Struct field encoding specification for nanopb */
#define badgelink_Packet_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   serial,            1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (packet,request,packet.request),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (packet,response,packet.response),   3) \
X(a, STATIC,   ONEOF,    BOOL,     (packet,sync,packet.sync),   4)
#define badgelink_Packet_CALLBACK NULL
#define badgelink_Packet_DEFAULT NULL
#define badgelink_Packet_packet_request_MSGTYPE badgelink_Request
#define badgelink_Packet_packet_response_MSGTYPE badgelink_Response

#define badgelink_Request_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (req,upload_chunk,req.upload_chunk),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (req,appfs_action,req.appfs_action),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (req,fs_action,req.fs_action),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (req,nvs_action,req.nvs_action),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (req,start_app,req.start_app),   5) \
X(a, STATIC,   ONEOF,    UENUM,    (req,xfer_ctrl,req.xfer_ctrl),   6)
#define badgelink_Request_CALLBACK NULL
#define badgelink_Request_DEFAULT NULL
#define badgelink_Request_req_upload_chunk_MSGTYPE badgelink_Chunk
#define badgelink_Request_req_appfs_action_MSGTYPE badgelink_AppfsActionReq
#define badgelink_Request_req_fs_action_MSGTYPE badgelink_FsActionReq
#define badgelink_Request_req_nvs_action_MSGTYPE badgelink_NvsActionReq
#define badgelink_Request_req_start_app_MSGTYPE badgelink_StartAppReq

#define badgelink_Response_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    status_code,       1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (resp,download_chunk,resp.download_chunk),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (resp,appfs_resp,resp.appfs_resp),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (resp,fs_resp,resp.fs_resp),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (resp,nvs_resp,resp.nvs_resp),   5)
#define badgelink_Response_CALLBACK NULL
#define badgelink_Response_DEFAULT NULL
#define badgelink_Response_resp_download_chunk_MSGTYPE badgelink_Chunk
#define badgelink_Response_resp_appfs_resp_MSGTYPE badgelink_AppfsActionResp
#define badgelink_Response_resp_fs_resp_MSGTYPE badgelink_FsActionResp
#define badgelink_Response_resp_nvs_resp_MSGTYPE badgelink_NvsActionResp

#define badgelink_StartAppReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   slug,              1) \
X(a, STATIC,   SINGULAR, STRING,   arg,               2)
#define badgelink_StartAppReq_CALLBACK NULL
#define badgelink_StartAppReq_DEFAULT NULL

#define badgelink_Chunk_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   position,          2) \
X(a, STATIC,   SINGULAR, BYTES,    data,              3)
#define badgelink_Chunk_CALLBACK NULL
#define badgelink_Chunk_DEFAULT NULL

#define badgelink_FsUsage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   size,              1) \
X(a, STATIC,   SINGULAR, UINT32,   used,              2)
#define badgelink_FsUsage_CALLBACK NULL
#define badgelink_FsUsage_DEFAULT NULL

#define badgelink_AppfsMetadata_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   slug,              1) \
X(a, STATIC,   SINGULAR, STRING,   title,             2) \
X(a, STATIC,   SINGULAR, UINT32,   version,           3) \
X(a, STATIC,   SINGULAR, UINT32,   size,              4)
#define badgelink_AppfsMetadata_CALLBACK NULL
#define badgelink_AppfsMetadata_DEFAULT NULL

#define badgelink_AppfsActionReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,metadata,id.metadata),   2) \
X(a, STATIC,   ONEOF,    STRING,   (id,slug,id.slug),   3) \
X(a, STATIC,   SINGULAR, UINT32,   crc32,             4) \
X(a, STATIC,   SINGULAR, UINT32,   list_offset,       5)
#define badgelink_AppfsActionReq_CALLBACK NULL
#define badgelink_AppfsActionReq_DEFAULT NULL
#define badgelink_AppfsActionReq_id_metadata_MSGTYPE badgelink_AppfsMetadata

#define badgelink_AppfsList_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  list,              1) \
X(a, STATIC,   SINGULAR, UINT32,   total_size,        2)
#define badgelink_AppfsList_CALLBACK NULL
#define badgelink_AppfsList_DEFAULT NULL
#define badgelink_AppfsList_list_MSGTYPE badgelink_AppfsMetadata

#define badgelink_AppfsActionResp_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (val,metadata,val.metadata),   1) \
X(a, STATIC,   ONEOF,    UINT32,   (val,crc32,val.crc32),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (val,list,val.list),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (val,usage,val.usage),   4) \
X(a, STATIC,   SINGULAR, UINT32,   size,              5)
#define badgelink_AppfsActionResp_CALLBACK NULL
#define badgelink_AppfsActionResp_DEFAULT NULL
#define badgelink_AppfsActionResp_val_metadata_MSGTYPE badgelink_AppfsMetadata
#define badgelink_AppfsActionResp_val_list_MSGTYPE badgelink_AppfsList
#define badgelink_AppfsActionResp_val_usage_MSGTYPE badgelink_FsUsage

#define badgelink_FsStat_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   size,              1) \
X(a, STATIC,   SINGULAR, UINT64,   mtime,             2) \
X(a, STATIC,   SINGULAR, UINT64,   ctime,             3) \
X(a, STATIC,   SINGULAR, UINT64,   atime,             4) \
X(a, STATIC,   SINGULAR, BOOL,     is_dir,            5)
#define badgelink_FsStat_CALLBACK NULL
#define badgelink_FsStat_DEFAULT NULL

#define badgelink_FsActionReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, STRING,   path,              2) \
X(a, STATIC,   SINGULAR, UINT32,   crc32,             3) \
X(a, STATIC,   SINGULAR, UINT32,   list_offset,       4) \
X(a, STATIC,   SINGULAR, UINT32,   size,              5)
#define badgelink_FsActionReq_CALLBACK NULL
#define badgelink_FsActionReq_DEFAULT NULL

#define badgelink_FsDirent_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, BOOL,     is_dir,            2)
#define badgelink_FsDirent_CALLBACK NULL
#define badgelink_FsDirent_DEFAULT NULL

#define badgelink_FsDirentList_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  list,              1) \
X(a, STATIC,   SINGULAR, UINT32,   total_size,        2)
#define badgelink_FsDirentList_CALLBACK NULL
#define badgelink_FsDirentList_DEFAULT NULL
#define badgelink_FsDirentList_list_MSGTYPE badgelink_FsDirent

#define badgelink_FsActionResp_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (val,stat,val.stat),   1) \
X(a, STATIC,   ONEOF,    UINT32,   (val,crc32,val.crc32),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (val,list,val.list),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (val,usage,val.usage),   4) \
X(a, STATIC,   SINGULAR, UINT32,   size,              5)
#define badgelink_FsActionResp_CALLBACK NULL
#define badgelink_FsActionResp_DEFAULT NULL
#define badgelink_FsActionResp_val_stat_MSGTYPE badgelink_FsStat
#define badgelink_FsActionResp_val_list_MSGTYPE badgelink_FsDirentList
#define badgelink_FsActionResp_val_usage_MSGTYPE badgelink_FsUsage

#define badgelink_NvsValue_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    UINT64,   (val,numericval,val.numericval),   2) \
X(a, STATIC,   ONEOF,    STRING,   (val,stringval,val.stringval),   3) \
X(a, STATIC,   ONEOF,    BYTES,    (val,blobval,val.blobval),   4)
#define badgelink_NvsValue_CALLBACK NULL
#define badgelink_NvsValue_DEFAULT NULL

#define badgelink_NvsEntry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, STRING,   namespc,           2) \
X(a, STATIC,   SINGULAR, STRING,   key,               3)
#define badgelink_NvsEntry_CALLBACK NULL
#define badgelink_NvsEntry_DEFAULT NULL

#define badgelink_NvsActionReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, STRING,   namespc,           2) \
X(a, STATIC,   SINGULAR, STRING,   key,               3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  wdata,             4) \
X(a, STATIC,   SINGULAR, UINT32,   list_offset,       5) \
X(a, STATIC,   SINGULAR, UENUM,    read_type,         6)
#define badgelink_NvsActionReq_CALLBACK NULL
#define badgelink_NvsActionReq_DEFAULT NULL
#define badgelink_NvsActionReq_wdata_MSGTYPE badgelink_NvsValue

#define badgelink_NvsEntriesList_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  entries,           1) \
X(a, STATIC,   SINGULAR, UINT32,   total_entries,     2)
#define badgelink_NvsEntriesList_CALLBACK NULL
#define badgelink_NvsEntriesList_DEFAULT NULL
#define badgelink_NvsEntriesList_entries_MSGTYPE badgelink_NvsEntry

#define badgelink_NvsActionResp_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (val,rdata,val.rdata),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (val,entries,val.entries),   2)
#define badgelink_NvsActionResp_CALLBACK NULL
#define badgelink_NvsActionResp_DEFAULT NULL
#define badgelink_NvsActionResp_val_rdata_MSGTYPE badgelink_NvsValue
#define badgelink_NvsActionResp_val_entries_MSGTYPE badgelink_NvsEntriesList

extern const pb_msgdesc_t badgelink_Packet_msg;
extern const pb_msgdesc_t badgelink_Request_msg;
extern const pb_msgdesc_t badgelink_Response_msg;
extern const pb_msgdesc_t badgelink_StartAppReq_msg;
extern const pb_msgdesc_t badgelink_Chunk_msg;
extern const pb_msgdesc_t badgelink_FsUsage_msg;
extern const pb_msgdesc_t badgelink_AppfsMetadata_msg;
extern const pb_msgdesc_t badgelink_AppfsActionReq_msg;
extern const pb_msgdesc_t badgelink_AppfsList_msg;
extern const pb_msgdesc_t badgelink_AppfsActionResp_msg;
extern const pb_msgdesc_t badgelink_FsStat_msg;
extern const pb_msgdesc_t badgelink_FsActionReq_msg;
extern const pb_msgdesc_t badgelink_FsDirent_msg;
extern const pb_msgdesc_t badgelink_FsDirentList_msg;
extern const pb_msgdesc_t badgelink_FsActionResp_msg;
extern const pb_msgdesc_t badgelink_NvsValue_msg;
extern const pb_msgdesc_t badgelink_NvsEntry_msg;
extern const pb_msgdesc_t badgelink_NvsActionReq_msg;
extern const pb_msgdesc_t badgelink_NvsEntriesList_msg;
extern const pb_msgdesc_t badgelink_NvsActionResp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define badgelink_Packet_fields &badgelink_Packet_msg
#define badgelink_Request_fields &badgelink_Request_msg
#define badgelink_Response_fields &badgelink_Response_msg
#define badgelink_StartAppReq_fields &badgelink_StartAppReq_msg
#define badgelink_Chunk_fields &badgelink_Chunk_msg
#define badgelink_FsUsage_fields &badgelink_FsUsage_msg
#define badgelink_AppfsMetadata_fields &badgelink_AppfsMetadata_msg
#define badgelink_AppfsActionReq_fields &badgelink_AppfsActionReq_msg
#define badgelink_AppfsList_fields &badgelink_AppfsList_msg
#define badgelink_AppfsActionResp_fields &badgelink_AppfsActionResp_msg
#define badgelink_FsStat_fields &badgelink_FsStat_msg
#define badgelink_FsActionReq_fields &badgelink_FsActionReq_msg
#define badgelink_FsDirent_fields &badgelink_FsDirent_msg
#define badgelink_FsDirentList_fields &badgelink_FsDirentList_msg
#define badgelink_FsActionResp_fields &badgelink_FsActionResp_msg
#define badgelink_NvsValue_fields &badgelink_NvsValue_msg
#define badgelink_NvsEntry_fields &badgelink_NvsEntry_msg
#define badgelink_NvsActionReq_fields &badgelink_NvsActionReq_msg
#define badgelink_NvsEntriesList_fields &badgelink_NvsEntriesList_msg
#define badgelink_NvsActionResp_fields &badgelink_NvsActionResp_msg

/* Maximum encoded size of messages (where known) */
#define BADGELINK_BADGELINK_PB_H_MAX_SIZE        badgelink_Packet_size
#define badgelink_AppfsActionReq_size            142
#define badgelink_AppfsActionResp_size           1039
#define badgelink_AppfsList_size                 1030
#define badgelink_AppfsMetadata_size             126
#define badgelink_Chunk_size                     4105
#define badgelink_FsActionReq_size               1046
#define badgelink_FsActionResp_size              4223
#define badgelink_FsDirentList_size              4214
#define badgelink_FsDirent_size                  260
#define badgelink_FsStat_size                    41
#define badgelink_FsUsage_size                   12
#define badgelink_NvsActionReq_size              4150
#define badgelink_NvsActionResp_size             5129
#define badgelink_NvsEntriesList_size            5126
#define badgelink_NvsEntry_size                  38
#define badgelink_NvsValue_size                  4101
#define badgelink_Packet_size                    5148
#define badgelink_Request_size                   4153
#define badgelink_Response_size                  5134
#define badgelink_StartAppReq_size               179

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
